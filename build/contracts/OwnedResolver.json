{
  "contractName": "OwnedResolver",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "coinType",
          "type": "uint256"
        }
      ],
      "name": "deleteAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "addr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "addresses",
      "outputs": [
        {
          "components": [
            {
              "name": "coinType",
              "type": "uint256"
            },
            {
              "name": "addr",
              "type": "bytes"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "coinType",
          "type": "uint256"
        },
        {
          "name": "a",
          "type": "bytes"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "a",
          "type": "address"
        }
      ],
      "name": "setAddr",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "coinType",
          "type": "uint256"
        }
      ],
      "name": "addr",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AddrChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "coinType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newAddress",
          "type": "bytes"
        }
      ],
      "name": "AddressChanged",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"coinType\",\"type\":\"uint256\"}],\"name\":\"deleteAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addresses\",\"outputs\":[{\"components\":[{\"name\":\"coinType\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"bytes\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"coinType\",\"type\":\"uint256\"},{\"name\":\"a\",\"type\":\"bytes\"}],\"name\":\"setAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"coinType\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"coinType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"bytes\"}],\"name\":\"AddressChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addr(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"return\":\"The associated address.\"},\"setAddr(bytes32,address)\":{\"params\":{\"a\":\"The address to set.\",\"node\":\"The node to update.\"}}}},\"userdoc\":{\"methods\":{\"addr(bytes32)\":{\"notice\":\"Returns the address associated with an ENS node.\"},\"setAddr(bytes32,address)\":{\"notice\":\"Sets the address associated with an ENS node. May only be called by the owner of that node in the ENS registry.\"}},\"notice\":\"A simple resolver anyone can use; only allows the owner of a node to set its address.\"}},\"settings\":{\"compilationTarget\":{\"/Users/tyler/projects/toySolidityBug/contracts/OwnedResolver.sol\":\"OwnedResolver\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tyler/projects/toySolidityBug/contracts/AddrResolver.sol\":{\"keccak256\":\"0x90b97b45c7f47dc5d9c93269b500af09ea5042196c4c1627e20e60e324c7eedb\",\"urls\":[\"bzzr://5b3e2f1ba0fde5a14a4f37105953cf0e3ae80f90885ce1e8b093f52b6a0f39f4\"]},\"/Users/tyler/projects/toySolidityBug/contracts/OwnedResolver.sol\":{\"keccak256\":\"0x70e294c58b458580693616323de3f80f8a8e34d004201bfe40fb682f7424857f\",\"urls\":[\"bzzr://8de999ea84af2427a52df3ce8d737599432e7e55ebfd47fd0a84f2ded275f4e1\"]},\"/Users/tyler/projects/toySolidityBug/contracts/ResolverBase.sol\":{\"keccak256\":\"0x225e1f37c2742847b91e34f76c4a51c8bc0bb25d0dc303ec1ce1d3be3ec8c446\",\"urls\":[\"bzzr://57d01d195ec59cfbfeba46615340165263893c1a7f8e39640a593719f7f6d022\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./AddrResolver.sol\";\n\n/**\n * A simple resolver anyone can use; only allows the owner of a node to set its\n * address.\n */\ncontract OwnedResolver is AddrResolver {\n    function isAuthorise(bytes32 node) internal view returns(bool) {\n      return true;\n    }\n}\n",
  "sourcePath": "/Users/tyler/projects/toySolidityBug/contracts/OwnedResolver.sol",
  "ast": {
    "absolutePath": "/Users/tyler/projects/toySolidityBug/contracts/OwnedResolver.sol",
    "exportedSymbols": {
      "OwnedResolver": [
        344
      ]
    },
    "id": 345,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 330,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/tyler/projects/toySolidityBug/contracts/AddrResolver.sol",
        "file": "./AddrResolver.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 345,
        "sourceUnit": 329,
        "src": "25:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "AddrResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 328,
              "src": "181:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddrResolver_$328",
                "typeString": "contract AddrResolver"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "181:12:1"
          }
        ],
        "contractDependencies": [
          328,
          413
        ],
        "contractKind": "contract",
        "documentation": "A simple resolver anyone can use; only allows the owner of a node to set its\naddress.",
        "fullyImplemented": false,
        "id": 344,
        "linearizedBaseContracts": [
          344,
          328,
          413
        ],
        "name": "OwnedResolver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "263:26:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "278:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 339,
                  "id": 341,
                  "nodeType": "Return",
                  "src": "271:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "221:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "221:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "220:14:1"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "257:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "256:6:1"
            },
            "scope": 344,
            "src": "200:89:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 345,
        "src": "155:136:1"
      }
    ],
    "src": "0:292:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/tyler/projects/toySolidityBug/contracts/OwnedResolver.sol",
    "exportedSymbols": {
      "OwnedResolver": [
        344
      ]
    },
    "id": 345,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 330,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/tyler/projects/toySolidityBug/contracts/AddrResolver.sol",
        "file": "./AddrResolver.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 345,
        "sourceUnit": 329,
        "src": "25:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "AddrResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 328,
              "src": "181:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddrResolver_$328",
                "typeString": "contract AddrResolver"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "181:12:1"
          }
        ],
        "contractDependencies": [
          328,
          413
        ],
        "contractKind": "contract",
        "documentation": "A simple resolver anyone can use; only allows the owner of a node to set its\naddress.",
        "fullyImplemented": false,
        "id": 344,
        "linearizedBaseContracts": [
          344,
          328,
          413
        ],
        "name": "OwnedResolver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "263:26:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "278:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 339,
                  "id": 341,
                  "nodeType": "Return",
                  "src": "271:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "221:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "221:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "220:14:1"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "257:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "256:6:1"
            },
            "scope": 344,
            "src": "200:89:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 345,
        "src": "155:136:1"
      }
    ],
    "src": "0:292:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-09-25T22:03:07.050Z",
  "devdoc": {
    "methods": {
      "addr(bytes32)": {
        "params": {
          "node": "The ENS node to query."
        },
        "return": "The associated address."
      },
      "setAddr(bytes32,address)": {
        "params": {
          "a": "The address to set.",
          "node": "The node to update."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addr(bytes32)": {
        "notice": "Returns the address associated with an ENS node."
      },
      "setAddr(bytes32,address)": {
        "notice": "Sets the address associated with an ENS node. May only be called by the owner of that node in the ENS registry."
      }
    },
    "notice": "A simple resolver anyone can use; only allows the owner of a node to set its address."
  }
}